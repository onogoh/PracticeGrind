

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.example</groupId>
  <artifactId>PracticeTopTal</artifactId>
  <version>1.0-SNAPSHOT</version>
<properties>
  <!--        <project.basedir>${basedir}</project.basedir>-->
  <scala.version>2.13.7</scala.version>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  <maven.compiler.source>1.8</maven.compiler.source>
  <maven.compiler.target>1.8</maven.compiler.target>
  <scoverage.plugin.version>1.4.1</scoverage.plugin.version>
  <project-info-reports.plugin.version>3.1.2</project-info-reports.plugin.version>
  <javac.target>1.8</javac.target>
  <scala.mavenPlugin.version>3.2.2</scala.mavenPlugin.version>
  <packaging>jar</packaging>
  <uberjar.name>benchmarks</uberjar.name>
  <mainClass>com.MOBI724.AI.Main</mainClass>
  <skipTests>false</skipTests>
</properties>


<dependencies>

  <dependency>
    <groupId>org.scala-lang</groupId>
    <artifactId>scala-library</artifactId>
    <version>${scala.version}</version>
    <!--            <scope>provided</scope>-->
  </dependency>

</dependencies>


<build>
  <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
  <!--        <directory>${project.basedir}/src/integrationTest/scala</directory>-->
  <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
  <testResources>
    <testResource>
      <directory>${project.basedir}/src/test/resources</directory>
    </testResource>
    <testResource>
      <directory>${project.basedir}/src/integrationTest/resources</directory>
    </testResource>
  </testResources>
  <pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${project-info-reports.plugin.version}</version>
      </plugin>
    </plugins>
  </pluginManagement>
  <plugins>



    <plugin>
      <groupId>net.alchim31.maven</groupId>
      <artifactId>scala-maven-plugin</artifactId>
      <version>4.6.1</version>
      <configuration>
        <scalaVersion>${scala.version}</scalaVersion>

        <recompileMode>incremental</recompileMode>
        <compilerPlugins>
          <compilerPlugin>
            <groupId>org.typelevel</groupId>
            <artifactId>kind-projector_2.13.6</artifactId>
            <version>0.13.2</version>
          </compilerPlugin>
        </compilerPlugins>
      </configuration>

      <executions>
        <execution>
          <id>scala-compile</id>
          <goals>
            <goal>add-source</goal>
            <goal>compile</goal>
            <goal>testCompile</goal>
          </goals>
        </execution>
        <execution>
          <id>benchmark-compile</id>
          <phase>process-sources</phase>
          <goals>
            <!-- Need to specify this explicitly, otherwise plugin won't be called when doing e.g. mvn compile -->
            <goal>add-source</goal>
            <goal>compile</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.8.0</version>
      <configuration>
        <compilerVersion>${javac.target}</compilerVersion>
        <source>${javac.target}</source>
        <target>${javac.target}</target>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-shade-plugin</artifactId>
      <version>3.2.1</version>
      <executions>
        <execution>
          <phase>package</phase>
          <goals>
            <goal>shade</goal>
          </goals>
          <configuration>
            <finalName>${uberjar.name}</finalName>
            <transformers>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                <!--                                    <mainClass>org.openjdk.jmh.Main</mainClass>-->
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
            </transformers>
            <filters>
              <filter>
                <!--
                    Shading signed JARs will fail without this.
                    http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar
                -->
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/*.SF</exclude>
                  <exclude>META-INF/*.DSA</exclude>
                  <exclude>META-INF/*.RSA</exclude>
                </excludes>
              </filter>
            </filters>
          </configuration>
        </execution>
      </executions>
    </plugin>

    <plugin>
      <artifactId>maven-assembly-plugin</artifactId>
      <executions>
        <execution>
          <phase>package</phase>
          <goals>
            <goal>single</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <archive>
          <manifest>
            <mainClass>${mainClass}</mainClass>
          </manifest>
        </archive>

        <descriptorRefs>
          <descriptorRef>jar-with-dependencies</descriptorRef>
        </descriptorRefs>
      </configuration>
    </plugin>

    <plugin>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest-maven-plugin</artifactId>
      <version>2.0.0</version>
      <configuration>
        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
        <junitxml>.</junitxml>
        <filereports>WDF TestSuite.txt</filereports>
      </configuration>
      <executions>

        <execution>
          <id>unit-test</id>
          <goals>
            <goal>test</goal>
          </goals>
          <configuration>
            <skipTests>${skip.unit.tests}</skipTests>
            <skipTests>${skipTests}</skipTests>
            <tagsToExclude>IntegrationTest</tagsToExclude>
            <tagsToInclude>UnitTest</tagsToInclude>
          </configuration>
        </execution>
        <execution>
          <id>integration-test</id>
          <goals>
            <goal>test</goal>
          </goals>
          <configuration>
            <skipTests>${skip.integration.tests}</skipTests>
            <tagsToExclude>UnitTest</tagsToExclude>
            <tagsToInclude>IntegrationTest</tagsToInclude>
          </configuration>
        </execution>

      </executions>
    </plugin>

    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>build-helper-maven-plugin</artifactId>
      <version>3.2.0</version>
      <executions>

        <execution>
          <id>add-source</id>
          <phase>generate-sources</phase>
          <goals>
            <goal>add-source</goal>
          </goals>
          <configuration>
            <sources>
              <source>${project.basedir}/src/main/scala</source>
            </sources>
          </configuration>
        </execution>

        <execution>
          <id>add-test-sources</id>
          <phase>generate-test-sources</phase>
          <goals>
            <goal>add-test-source</goal>
          </goals>
          <configuration>
            <sources>
              <source>src/integrationTest/scala</source>
            </sources>
          </configuration>
        </execution>

        <execution>
          <id>add-test-resources</id>
          <phase>generate-test-resources</phase>
          <goals>
            <goal>add-test-resource</goal>
          </goals>
          <configuration>
            <resources>
              <resource>
                <!--<filtering>true</filtering>-->
                <directory>src/integrationTest/resources</directory>
              </resource>
            </resources>
          </configuration>
        </execution>

      </executions>
    </plugin>

    <plugin>
      <groupId>org.scoverage</groupId>
      <artifactId>scoverage-maven-plugin</artifactId>
      <version>${scoverage.plugin.version}</version>
      <configuration>
        <scalaVersion>${scala.version}</scalaVersion>
        <!-- other parameters -->
      </configuration>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-project-info-reports-plugin</artifactId>
      <version>${project-info-reports.plugin.version}</version>
    </plugin>



  </plugins>

</build>

<reporting>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-project-info-reports-plugin</artifactId>
      <version>${project-info-reports.plugin.version}</version>
      <reportSets>
        <reportSet>
          <reports>
            <report>index</report>
          </reports>
        </reportSet>
      </reportSets>
    </plugin>

    <plugin>
      <groupId>org.scoverage</groupId>
      <artifactId>scoverage-maven-plugin</artifactId>
      <version>${scoverage.plugin.version}</version>
      <reportSets>
        <reportSet>
          <reports>
            <report>report</report> <!-- select only one report from: report, integration-report and report-only reporters -->
          </reports>
        </reportSet>
      </reportSets>
    </plugin>
  </plugins>
</reporting>



<profiles>

  <profile>
    <id>dev</id>
    <activation>
      <activeByDefault>true</activeByDefault>
    </activation>
    <properties>
      <build.profile.id>dev</build.profile.id>
      <skip.integration.tests>true</skip.integration.tests>
      <skip.unit.tests>false</skip.unit.tests>

    </properties>
  </profile>

  <profile>
    <id>integration-test</id>
    <properties>
      <build.profile.id>integration-test</build.profile.id>
      <skip.integration.tests>false</skip.integration.tests>
      <skip.unit.tests>false</skip.unit.tests>

    </properties>
  </profile>
</profiles>

</project>
